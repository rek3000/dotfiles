(defwidget bar_part []
  (centerbox 
    :orientation "v"
    :class "bar_part"
    (box :valign "start"
         :class "top-bar"
         :orientation "v"
         :space-evenly false
      ; (greet)
      (workspaces)
      )
    (box :valign "center"
         :class "middle-bar"
      (time)
      )
    (box :valign "end"
         :class "bottom-bar"
      (ram))
    ))

(defwidget time []
  (box :class "time"
       :orientation "v"
    (label :text "${time.hour}")
    (label :text "${time.min}")
    ))

(defwidget greet []
  (box :class "greet"
       :orientation "h"
    (label :text "?")
    ))

(defwidget ram []
  (box :class "ram"
    (label :angle 90 :text "this is a status bar")))

(defpoll time 
  :interval "5s"
  `date +'{"hour":"%H","min":"%M"}'`)

; (defpoll hour :interval "1s" "date +%H")
; (defpoll min  :interval "1s" "date +%M")
; (defpoll sec  :interval "1s" "date +%S")

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defvar empty "◇")
(defvar occupy "◆")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
         :orientation "v"
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            ; (label :markup "${workspace.windows > 0 ? "◆" : "◇" }")
            (label :markup "${workspace.windows > 0 ? "${occupy}" : "${empty}"}")
            )
          )
        )
      )
    )
  )



(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "5px"
    :y "0%"
    :height "98%"
    :width "10px"             
    :windowtype "dock"
    :anchor "left center")      
  :exclusive true
  :focusable false
  :reserve (struts :side "top" :distance "4%")   
  (bar_part))


