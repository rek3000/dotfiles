(defwidget bar_part [mode]
  (centerbox 
    :orientation mode
    :class "bar_part"
    (box :valign "fill"
         :halign "start"
         :class "top-bar ${mode}"
         :orientation mode
         :space-evenly true
      (workspaces :orient mode)
      )
    (box :valign "fill"
         :halign "center"
         :class "middle-bar ${mode}"
      (time :orient mode)
      )
    (box :valign "fill"
         :halign "end"
         :class "bottom-bar ${mode}"
         :space-evenly false
      (ram :orient mode)
      (battery :orient mode)
      )
    ))

(defwidget dash []
    (box :valign "center"
         :halign "start"
         :class "dash_text"
    (ram :orient "v")
     )
    )

(defwidget time [orient]
  (box :class "time ${orient}" 
       :orientation orient
       :space-evenly false
       :tooltip  "${time_detail}"
    (label :text "${time["hour"]}")
    (label :markup "${orient == "h" || orient == "horizontal" ? ":" : ""}${time["min"]}")
    ))

(defwidget greet []
  (box :class "greet"
       :orientation "h"
    (label :text "?")
    ))

(defwidget ram [orient]
  (box :class "ram ${orient}"
    (label :angle {orient == "v" || orient == "horizontal" ? 90 : 0} :markup "~εὐδαιμονία~")))

(defwidget icon_tray [orient]
    (box :class "icon_tray ${orient}"
        (image :path "/home/rek/.config/eww/assets/blink.png" 
                :image-width 40 
                :image-height 40)
    )
)

(defwidget battery [orient]
  (box :class "battery ${orient}"
       :tooltip  "${"${battery_status}" == "1" ? "Charging" : "On use"}"
    (label :angle {orient == "v" || orient == "horizontal" ? 90 : 0} :markup "${"${battery_status}" == "1" ? "+" : "-"}${battery}" )))

(defpoll time 
  :interval "5s"
  `date +'{"hour":"%H","min":"%M"}'`)
(defpoll time_detail 
  :interval "1s"
  `date`)

(defpoll battery 
  :interval "15s"
  `cat /sys/class/power_supply/BAT0/capacity`)

(defpoll battery_status 
  :interval "5s"
  `cat /sys/class/power_supply/AC/online`)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defvar empty "◇")
(defvar occupy "◆")
(defwidget workspaces [orient]
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
         :orientation orient
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :markup "${workspace.windows > 0 ? "${occupy}" : "${empty}"}")
           
            )
          )
        )
      )
    )
  )


(defvar space "5px")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "5px"
    :y "0%"
    :height "98%"
    :width "10px"             
    :anchor "left center")      
  :exclusive true
  :focusable false
  :stacking "bottom"
  (bar_part :mode "v"))

(defwindow bar2
  :monitor 0
  :geometry (geometry :y "0px"
    ;; :x "0%"
    :width "100%"
    ;; :height "10px"             
    :anchor "bottom center")      
  :exclusive true
  :focusable false
  :stacking "fg"
  (bar_part :mode "h"))

(defwindow bar2-1
  :monitor 1
  :geometry (geometry :y "5px"
    :x "0%"
    :width "98%"
    :height "10px"             
    :anchor "bottom center")      
  :exclusive true
  :focusable false
  :stacking "fg"
  (bar_part :mode "h"))

(defwindow dashboard
  :monitor 0
  :geometry (geometry :y "5px"
    :x "0%"
    :width "98%"
    :height "10px"             
    :anchor "left center")      
  :exclusive false
  :focusable false

  (dash))

